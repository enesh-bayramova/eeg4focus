{
  "name": "EEG Focus Simulator",
  "nodes": [
    {
      "parameters": {
        "interval": 10,
        "unit": "seconds"
      },
      "id": "Cron_Simulate",
      "name": "Cron Trigger",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [100, 300]
    },
    {
      "parameters": {
        "functionCode": "// Generate random EEG data with attentionScore between 0 and 1\nreturn [{ json: {\n  userId: 'simulatedUser',\n  attentionScore: Math.random(),\n  timestamp: new Date().toISOString()\n}}];"
      },
      "id": "Function_Simulate",
      "name": "Generate Random EEG Data",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [300, 300]
    },
    {
      "parameters": {
        "functionCode": "// Extract incoming data and check if attention level is below threshold\nconst data = items[0].json;\nconst threshold = 0.4;\n\nconst alert = data.attentionScore < threshold;\n\nreturn [{ json: {\n  userId: data.userId || 'unknown',\n  attentionScore: data.attentionScore,\n  alert,\n  timestamp: data.timestamp\n}}];"
      },
      "id": "Function_Check",
      "name": "Check Attention Level",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [500, 300]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json[\"alert\"]}}",
              "value2": true
            }
          ]
        }
      },
      "id": "If_Alert",
      "name": "Attention Low?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [700, 300]
    },
    {
      "parameters": {
        "functionCode": "// Log an alert if focus dropped\nconsole.log('⚠️ Focus dropped!', items[0].json);\nreturn items;"
      },
      "id": "Log_Alert",
      "name": "Log Alert",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [900, 200]
    },
    {
      "parameters": {
        "functionCode": "// Log normal focus state\nconsole.log('✅ Focus OK', items[0].json);\nreturn items;"
      },
      "id": "Log_Normal",
      "name": "Log Normal",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [900, 400]
    }
  ],
  "connections": {
    "Cron_Simulate": {
      "main": [
        [
          {
            "node": "Function_Simulate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function_Simulate": {
      "main": [
        [
          {
            "node": "Function_Check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function_Check": {
      "main": [
        [
          {
            "node": "If_Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If_Alert": {
      "main": [
        [
          {
            "node": "Log_Alert",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log_Normal",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  ],
  "settings": {
    "executionOrder": "v1"
  },
  "triggerCount": 1
}
